{"version":3,"sources":["components/Cup.js","components/Square.js","components/Rack.js","components/Table.js","components/Select.js","components/SideInfo.js","formations.js","components/Game.js","components/Lobby.js","App.js","secrets.js","serviceWorker.js","index.js"],"names":["Cup","this","props","handleClick","key","side","index","className","visible","active","onClick","Component","Square","state","handleCupClick","row","column","hasCup","Rack","event","squares","grid","map","position","i","Table","currentTurn","myPlayer","pubnub","publish","message","isMove","channel","gameChannel","isPlaying","Fragment","left_grid","right_grid","Select","e","target","value","handleChange","options","option","name","label","onChange","bind","SideInfo","handleStart","handleEndTurn","rerack","opponentsName","myTurn","formationOptions","handleFormationChange","cupsRemaining","STANDARD","cups","formation","FORMATIONS","Game","left_cups_remaining","right_cups_remaining","setGrid","left_formation_options","setFormationOptions","right_formation_options","getMessage","msg","updateGrid","resetGame","setState","handleChooseStartSide","sideToSet","filter","parseInt","updateCupCount","size","Array","keys","forEach","_","r","c","squareHasCup","push","addOrRemoveCups","change","left_formation","right_formation","Lobby","newRoom","newName","handleCreateRoom","handleJoinRoom","handleResetTable","isRoomCreator","type","handleNewNameChange","handleNewRoomChange","roomId","App","PubNubReact","publishKey","subscribeKey","createDisabled","myName","lobbyChannel","init","unsubscribe","channels","startGame","subscribe","playerName","alert","sendCreatorName","startSide","newSide","endGame","creatorNameUpdate","length","result","characters","charactersLength","charAt","Math","floor","random","makeid","withPresence","room","hereNow","then","response","totalOccupancy","catch","error","console","log","newCurrentTurn","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.013ae72d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Cup extends Component {\n    handleClick() {\n        this.props.handleClick();\n    }\n\n    render() {\n        return (\n            <div key={\"square_\" + this.props.side + this.props.index}\n                 className={\"cup cup-\" + this.props.side + (this.props.visible ? \" cup-visible\" : \"\") + (this.props.active ? \"\" : \" cup-inactive\")}\n                 onClick={() => this.handleClick()}>\n            </div>\n        );\n    }\n}\n\nexport default Cup;","import React, { Component } from 'react';\nimport Cup from './Cup';\n\nclass Square extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { };\n    }\n\n    handleCupClick() {\n        this.props.handleCupClick({\n            side: this.props.side,\n            row: this.props.row,\n            column: this.props.column\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"square\">\n                { this.props.hasCup && \n                   <Cup key={\"cup_\" + this.props.side + this.props.index}\n                        side={this.props.side}\n                        index={this.props.index}\n                        active={this.props.active}\n                        visible={this.props.hasCup}\n                        handleClick={() => this.handleCupClick()}>\n                   </Cup> \n                }\n            </div>\n        );\n    }\n}\n\nexport default Square;","import React, { Component } from 'react';\nimport Square from './Square';\n\nclass Rack extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { };\n    }\n\n    handleCupClick(event) {\n        this.props.handleCupClick({\n            side: event.side,\n            row: event.row,\n            column: event.column\n        });\n    }\n\n    render() {\n        const squares = this.props.grid.map((position, i) => {\n            return (\n                <Square key={\"square_\" + this.props.side + i}\n                        index={i}\n                        side={this.props.side}\n                        row={position.row}\n                        column={position.column}\n                        hasCup={position.hasCup}\n                        active={position.active}\n                        handleCupClick={(event) => this.handleCupClick(event)}>\n                </Square>\n            );\n        })\n\n        return (\n            <div className={\"rack rack-\" + this.props.side}>\n                { squares }\n            </div>\n        );\n    }\n}\n\nexport default Rack;","import React, { Component } from 'react';\nimport Rack from './Rack'\n\nclass Table extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { };\n    }\n\n    handleCupClick(event) {\n        if (this.props.currentTurn !== this.props.myPlayer) {\n            return;\n        }\n        if (event.side === this.props.myPlayer){\n            return;\n        }\n        this.props.pubnub.publish({\n            message: {\n                isMove: true,\n                side: event.side,\n                row: event.row,\n                column: event.column\n            },\n            channel: this.props.gameChannel\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"table\">\n                { this.props.isPlaying &&\n                    <React.Fragment>\n                      <Rack key={\"left\"} \n                             side={\"left\"}\n                             grid={this.props.left_grid}\n                             handleCupClick={(event) => this.handleCupClick(event)}>\n                        </Rack>\n                        <Rack key={\"right\"} \n                              side={\"right\"}\n                              grid={this.props.right_grid}\n                              handleCupClick={(event) => this.handleCupClick(event)}>\n                        </Rack>\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Table;","import React, { Component } from 'react';\n\nclass Select extends Component {\n    handleChange(e) {\n        if (e.target.value) {\n            this.props.handleChange(e.target.value);\n        }\n    }\n\n    render() {\n        const options = this.props.options.map((option) => {\n            return <option key={option.value} value={option.value}>{option.name}</option>\n        });\n        return (\n            <div className=\"custom-select\">\n                <label>\n                    { this.props.label }\n                    <select onChange={this.handleChange.bind(this)} value={this.props.value}>\n                        <option key=\"please-select\" value={null}>Select an Option</option>\n                        { options }\n                    </select>\n            </label>\n          </div>\n        );\n    }\n}\n\nexport default Select;","import React, { Component } from 'react';\nimport Select from './Select';\n\nclass SideInfo extends Component {\n    handleStart() {\n        this.props.handleStart();\n    }\n\n    handleEndTurn() {\n        this.props.handleEndTurn(this.props.side);\n    }\n\n    handleFormationChange(value) {\n        if (value) {\n            this.props.pubnub.publish({\n                message: {\n                    rerack: true,\n                    side: this.props.side,\n                    value: value\n                },\n                channel: this.props.gameChannel\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"side-info side-info-\" + this.props.side}>\n                { !this.props.currentTurn &&\n                    <button className={\"side-start-\" + this.props.side}\n                            onClick={() => this.handleStart()}>{this.props.side} start</button>\n                }\n                { (this.props.currentTurn === this.props.side) &&\n                    <div className={\"side-info-controls side-info-controls-\" + this.props.side}>\n                        <div className=\"side-info-controls-sub\">\n                            <h4 className={\"side-info-head side-info-head-\" + this.props.side}>\n                                {this.props.side === this.props.myPlayer ? \"your\" : (this.props.opponentsName + \"'s\") } turn</h4>\n                            { this.props.myTurn &&\n                                <button onClick={() => this.handleEndTurn()}>end turn</button>\n                            }\n                        </div>\n                        { this.props.myTurn &&\n                            <div className=\"side-info-controls-sub\">\n                                <Select key={\"select\" + this.props.side}\n                                        label=\"rerack\"\n                                        options={this.props.formationOptions}\n                                        handleChange={(value) => this.handleFormationChange(value)}></Select>\n                            </div>\n                        }\n                        <div className=\"side-info-controls-sub\">\n                            { this.props.cupsRemaining } cup(s) remaining\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SideInfo;","export const STANDARD = {\n    value: 0,\n    name: \"Standard\",\n    cups: 10,\n    formation: [\n        { row: 0, column: 0 },\n        { row: 2, column: 0 },\n        { row: 4, column: 0 },\n        { row: 6, column: 0 },\n        { row: 1, column: 2 },\n        { row: 3, column: 2 },\n        { row: 5, column: 2 },\n        { row: 2, column: 4 },\n        { row: 4, column: 4 },\n        { row: 3, column: 6 }\n    ]\n}\n\nexport const DESPERATION = {\n    value: 1,\n    name: \"Desperation Honeycomb\",\n    cups: 7,\n    formation: [\n        { row: 1, column: 2 },\n        { row: 2, column: 0 },\n        { row: 2, column: 4 },\n        { row: 3, column: 2 },\n        { row: 4, column: 0 },\n        { row: 4, column: 4 },\n        { row: 5, column: 2 }\n    ]\n}\n\nexport const THREETWOONE = {\n    value: 2,\n    name: \"Three Two One\",\n    cups: 6,\n    formation: [\n        { row: 1, column: 0 },\n        { row: 2, column: 2 },\n        { row: 3, column: 0 },\n        { row: 3, column: 4 },\n        { row: 4, column: 2 },\n        { row: 5, column: 0 }\n    ]\n}\n\nexport const THREETHREESTRAIGHT = {\n    value: 3,\n    name: \"3-3 Offset Straight Line\",\n    cups: 6,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 2, column: 4 },\n        { row: 4, column: 1 },\n        { row: 4, column: 3 },\n        { row: 4, column: 5 }\n    ]\n}\n\nexport const THREETWOSTRAIGHT = {\n    value: 4,\n    name: \"3-2 Offset Straight Line\",\n    cups: 5,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 2, column: 4 },\n        { row: 4, column: 1 },\n        { row: 4, column: 3 }\n    ]\n}\n\nexport const DIAMOND = {\n    value: 5,\n    name: \"Diamond\",\n    cups: 4,\n    formation: [\n        { row: 2, column: 2 },\n        { row: 3, column: 0 },\n        { row: 3, column: 4 },\n        { row: 4, column: 2 }\n    ]\n}\n\nexport const TWOTWOSTRAIGHT = {\n    value: 6,\n    name: \"2-2 Offset Straight Line\",\n    cups: 4,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 4, column: 1 },\n        { row: 4, column: 3 }\n    ]\n}\n\nexport const TINYTRIANGLE = {\n    value: 7,\n    name: \"Tiny Triangle\",\n    cups: 3,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 3, column: 2 },\n        { row: 4, column: 0 }\n    ]\n}\n\nexport const PLAYBUTTON = {\n    value: 8,\n    name: \"Belly Button (Play Button)\",\n    cups: 3,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 4, column: 1 }\n    ]\n}\n\nexport const STOPLIGHT = {\n    value: 9,\n    name: \"Stoplight\",\n    cups: 3,\n    formation: [\n        { row: 3, column: 0 },\n        { row: 3, column: 2 },\n        { row: 3, column: 4 }\n    ]\n}\n\nexport const GENTLEMENS = {\n    value: 10,\n    name: \"Gentlemens\",\n    cups: 2,\n    formation: [\n        { row: 3, column: 0 },\n        { row: 3, column: 2 }\n    ]\n}\n\nexport const SINGLECUP = {\n    value: 11,\n    name: \"Single Cup\",\n    cups: 1,\n    formation: [\n        { row: 3, column: 0 }\n    ]\n}\n\nexport const FORMATIONS = [\n    STANDARD,\n    DESPERATION,\n    THREETWOONE,\n    THREETHREESTRAIGHT,\n    THREETWOSTRAIGHT,\n    DIAMOND,\n    TWOTWOSTRAIGHT,\n    TINYTRIANGLE,\n    PLAYBUTTON,\n    STOPLIGHT,\n    GENTLEMENS,\n    SINGLECUP\n];","import React, { Component } from 'react';\nimport Table from './Table';\nimport SideInfo from './SideInfo';\nimport { STANDARD, FORMATIONS }from '../formations';\n\nclass Game extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            left_cups_remaining: 10,\n            right_cups_remaining: 10,\n            left_grid: this.setGrid('left', STANDARD.formation),\n            right_grid: this.setGrid('right', STANDARD.formation),\n            left_formation_options: this.setFormationOptions(10),\n            right_formation_options: this.setFormationOptions(10)\n        };\n    }\n\n    componentDidUpdate() {\n        if (this.props.gameChannel === null || this.props.pubnub === null) {\n            return;\n        }\n\n        this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n            if (msg.message.isMove) {\n                this.updateGrid(msg.message.side, msg.message.row, msg.message.column)\n            }\n            if (msg.message.rerack) {\n                this.rerack(msg.message.side, msg.message.value);\n            }\n            if (msg.message.resetGame) {\n                this.setState({\n                    left_cups_remaining: 10,\n                    right_cups_remaining: 10,\n                    left_grid: this.setGrid('left', STANDARD.formation),\n                    right_grid: this.setGrid('right', STANDARD.formation),\n                    left_formation_options: this.setFormationOptions(10),\n                    right_formation_options: this.setFormationOptions(10)\n                })\n            }\n        });\n    }\n\n    handleChooseStartSide(side) {\n        this.props.handleChooseStartSide(side);\n    }\n\n    handleEndTurn() {\n        this.props.handleEndTurn();\n    }\n\n    rerack(side, value) {\n        const sideToSet = side === \"left\" ? \"right\" : \"left\"\n        const formation = FORMATIONS.filter(formation => formation.value === parseInt(value))[0];\n        this.updateCupCount(side, formation.cups);\n        const grid = this.setGrid(sideToSet, formation.formation);\n        if (sideToSet === \"left\") {\n            this.setState({ left_grid: grid });\n        } else {\n            this.setState({ right_grid: grid });\n        }\n    }\n\n    squareHasCup(formation, row, column) {\n        for (const position of formation) {\n            if (position.row === row && position.column === column) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    setGrid(side, formation) {\n        const size = [...Array(7).keys()];\n        const grid = [];\n        size.forEach((_, row) => {\n            size.forEach((_, column) => {\n                const r = side === 'left' ? row : 6 - row;\n                const c = side === 'left' ? column : 6 - column;\n                const hasCup = this.squareHasCup(formation, r, c);\n                grid.push({\n                    row: r, \n                    column: c, \n                    hasCup: hasCup,\n                    active: hasCup\n                });\n            });\n        });\n        return grid;\n    }\n\n    updateGrid(side, row, column) {\n        const grid = side === \"left\" ? this.state.left_grid : this.state.right_grid;\n        grid.forEach((position) => {\n            if (position.row === row && position.column === column) {\n                position.active = !position.active;\n                this.addOrRemoveCups((side === \"left\" ? \"right\" : \"left\"), (position.active ? 1 : -1));\n            }\n        });\n        if (side === \"left\") {\n            this.setState({ left_grid: grid });\n        } else {\n            this.setState({ right_grid: grid });\n        }\n    }\n\n    addOrRemoveCups(side, change) {\n        if (side === \"left\") {\n            const cups = this.state.left_cups_remaining + change;\n            this.setState({ \n                left_cups_remaining: cups,\n                left_formation_options: this.setFormationOptions(cups)\n            });\n        } else {\n            const cups = this.state.right_cups_remaining + change;\n            this.setState({ \n                right_cups_remaining: cups,\n                right_formation_options: this.setFormationOptions(cups)\n            });\n        }\n    }\n\n\n    updateCupCount(side, value) {\n        if (side === \"left\") {\n            this.setState({ \n                left_cups_remaining: value,\n                left_formation_options: this.setFormationOptions(value)\n            });\n        } else {\n            this.setState({ \n                right_cups_remaining: value,\n                right_formation_options: this.setFormationOptions(value)\n            });\n        }\n    }\n\n    setFormationOptions(cups) {\n        const options = FORMATIONS.filter(formation => formation.cups === cups).map((formation) => {\n            return {value: formation.value, name: formation.name}\n        });\n        return options;\n    }\n\n    render() {\n        return (\n            <div className=\"game\">\n                { this.props.isPlaying &&\n                    <React.Fragment>\n                        <SideInfo key=\"sideinfoleft\"\n                                  side=\"left\"\n                                  currentTurn={this.props.currentTurn}\n                                  myTurn={this.props.myTurn}\n                                  myPlayer={this.props.myPlayer}\n                                  pubnub={this.props.pubnub}\n                                  gameChannel={this.props.gameChannel}\n                                  opponentsName={this.props.opponentsName}\n                                  cupsRemaining={this.state.left_cups_remaining}\n                                  formationOptions={this.state.left_formation_options}\n                                  handleStart={() => this.handleChooseStartSide(\"left\")}\n                                  handleEndTurn={() => this.handleEndTurn()}>\n                        </SideInfo>\n                        <SideInfo key=\"sideinforight\"\n                                  side=\"right\"\n                                  currentTurn={this.props.currentTurn}\n                                  myTurn={this.props.myTurn}\n                                  myPlayer={this.props.myPlayer}\n                                  pubnub={this.props.pubnub}\n                                  gameChannel={this.props.gameChannel}\n                                  opponentsName={this.props.opponentsName}\n                                  cupsRemaining={this.state.right_cups_remaining}\n                                  formationOptions={this.state.right_formation_options}\n                                  handleStart={() => this.handleChooseStartSide(\"right\")}\n                                  handleEndTurn={() => this.handleEndTurn()}>\n                        </SideInfo>\n                    </React.Fragment>\n                }\n                <Table left_formation={this.state.left_formation}\n                       right_formation={this.state.right_formation}\n                       left_grid={this.state.left_grid}\n                       right_grid={this.state.right_grid}\n                       isPlaying={this.props.isPlaying}\n                       pubnub={this.props.pubnub}\n                       gameChannel={this.props.gameChannel}\n                       currentTurn={this.props.currentTurn}\n                       myPlayer={this.props.myPlayer}>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React, { Component } from 'react';\n\nclass Lobby extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newRoom: '',\n            newName: ''\n        }\n    }\n\n    handleCreateRoom() {\n        this.props.handleCreateRoom(this.state.newName);\n    }\n\n    handleJoinRoom() {\n        this.props.handleJoinRoom(this.state.newRoom, this.state.newName);\n    }\n\n    handleResetTable() {\n        this.props.handleResetTable();\n    }\n    \n    handleNewRoomChange(e) {\n        this.setState({ newRoom: e.target.value });\n    }\n\n    handleNewNameChange(e) {\n        this.setState({ newName: e.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"lobby\">\n                <h3>BIP - BEER[INTERNET]PONG</h3>\n                <div>\n                    { !this.props.isPlaying && !this.props.isRoomCreator &&  \n                        <React.Fragment>\n                            <div className=\"lobby-section\">\n                                <h4>Step 1:</h4>\n                            </div>\n                            <div className=\"lobby-section\">\n                                <label>\n                                    Enter Team Name:\n                                    <input type=\"text\" onChange={(e) => this.handleNewNameChange(e)}></input>\n                                </label>\n                            </div>\n                            <div className=\"lobby-section\">\n                                <h4>Step 2:</h4>\n                            </div>\n                            <div className=\"lobby-section lobby-section-create\">\n                                <button onClick={() => this.handleCreateRoom()}>Create Game</button>\n                            </div>\n                            <div className=\"lobby-section\">\n                            <   h4>Or</h4>\n                            </div>\n                            <div className=\"lobby-section lobby-section-join\">\n                                <label>\n                                    Enter Game Code:\n                                    <input type=\"text\" onChange={(e) => this.handleNewRoomChange(e)}></input>\n                                </label>\n                                <button onClick={() => this.handleJoinRoom()}>Join Game</button>\n                            </div>\n                        </React.Fragment>\n                    }\n                    { this.props.isPlaying && \n                    <div className=\"lobby-section lobby-section-end\">\n                        <button onClick={() => this.handleResetTable()}>Reset Table</button>\n                    </div>\n                    }\n                    { this.props.isRoomCreator && !this.props.isPlaying && \n                        <div className=\"lobby-section lobby-section-room\">\n                            <b>Share This Game Code With Your Opponent: {this.props.roomId}</b>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Lobby;","import React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\nimport Game from './components/Game';\nimport Lobby from './components/Lobby';\nimport './App.css';\nimport { PUBNUB_PUBLISH_KEY, PUBNUB_SUBSCRIBE_KEY } from './secrets';\n\nclass App extends Component {\n  constructor(props) {  \n    super(props);\n\n    this.pubnub = new PubNubReact({\n      publishKey: PUBNUB_PUBLISH_KEY, \n      subscribeKey: PUBNUB_SUBSCRIBE_KEY  \n    });\n    \n    this.state = {\n      currentTurn: null, // left or right\n      myPlayer: null, // left or right\n      myTurn: false,\n      isPlaying: false, // Set to true when 2 players are in a channel\n      isRoomCreator: false,\n      createDisabled: false, // whether the create button is disabled\n      myName: \"\",\n      opponentsName: \"\"\n    };\n\n    this.lobbyChannel = null; // Lobby channel\n    this.gameChannel = null; // Game channel\n    this.roomId = null; // Unique id when player creates a room\n    this.pubnub.init(this);\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if (msg.message.startGame) {\n          // Create a different channel for the game\n          this.gameChannel = 'bipgame--' + this.roomId;\n\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n\n          if (this.state.isRoomCreator) {\n            this.setState({opponentsName: msg.message.playerName});\n            alert(\"You opponent is \" + msg.message.playerName);\n            this.sendCreatorName();\n          } else {\n            this.setState({myName: msg.message.playerName});\n            this.setState({myPlayer: 'right'})\n          }\n\n          this.setState({\n            isPlaying: true,\n            createDisabled: true\n          });\n        }\n        if (msg.message.startSide) {\n          this.setState({ \n            currentTurn: msg.message.startSide,\n            myTurn: this.state.myPlayer === msg.message.startSide\n          });\n        }\n        if (msg.message.newSide) {\n          this.setState({ \n            currentTurn: msg.message.newSide,\n            myTurn: this.state.myPlayer === msg.message.newSide\n          });\n        }\n        if (msg.message.endGame && msg.message.side !== this.state.myPlayer) {\n          alert(\"The Game Has Ended\");\n        }\n        if (msg.message.creatorNameUpdate && !this.state.isRoomCreator) {\n          this.setState({opponentsName: msg.message.playerName });\n          alert(\"You opponent is \" + msg.message.playerName);\n        }\n      }); \n    }\n  }\n\n  sendCreatorName() {\n    this.pubnub.publish({\n      message: {\n        creatorNameUpdate: true,\n        playerName: this.state.myName\n      },\n      channel: this.lobbyChannel\n    });\n  }\n\n  makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n\n  handleCreateRoom(name) {\n    // Create a random name for the channel\n    this.roomId = this.makeid(5);\n    this.lobbyChannel = 'biplobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n    this.setState({\n      myPlayer: 'left',\n      isRoomCreator: true,\n      createDisabled: true, // Disable the 'Create' button\n      myTurn: false, // Room creator makes the 1st move\n      myName: name\n    });\n  }\n\n  handleJoinRoom(room, name) {\n    this.roomId = room;\n    this.lobbyChannel = 'biplobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n    }).then((response) => { \n        if(response.totalOccupancy < 2){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            myPlayer: 'right',\n          });\n          \n          this.pubnub.publish({\n            message: {\n              startGame: true,\n              playerName: name\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          alert(\"Game in progress. Try another room.\");\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  handleResetTable() {\n    this.pubnub.publish({\n      message: {\n        resetGame: true\n      },\n      channel: this.gameChannel\n    });\n  }\n\n  handleChooseStartSide(side) {\n    this.setState({ \n      currentTurn: side,\n      myTurn: this.state.myPlayer === side\n    });\n    this.pubnub.publish({\n      message: {\n        startSide: side\n      },\n      channel: this.lobbyChannel\n    });\n  }\n\n  handleEndTurn() {\n    const newCurrentTurn = this.state.currentTurn === 'left' ? 'right' : 'left'\n    this.pubnub.publish({\n      message: {\n        newSide: newCurrentTurn\n      },\n      channel: this.lobbyChannel\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"help\">\n          <a href=\"https://github.com/mblumberg93/bip\" target=\"_blank\" rel=\"noopener noreferrer\">\n          click here for instructions on how to play\n          </a>\n        </div>\n        { this.state.isPlaying &&\n          <div className={\"you-are you-are-\" + this.state.myPlayer}>\n            <h2>Welcome {this.state.myName}! Your side is <span className=\"you-are-side\">{this.state.myPlayer}</span></h2>\n          </div>\n        }\n        <Lobby roomId={this.roomId}\n               isPlaying={this.state.isPlaying}\n               isRoomCreator={this.state.isRoomCreator}\n               handleCreateRoom={(name) => this.handleCreateRoom(name)}\n               handleJoinRoom={(room, name) => this.handleJoinRoom(room, name)}\n               handleResetTable={() => this.handleResetTable()}>\n        </Lobby>\n        <Game currentTurn={this.state.currentTurn}\n              myPlayer={this.state.myPlayer}\n              myTurn={this.state.myTurn}\n              isPlaying={this.state.isPlaying}\n              pubnub={this.pubnub}\n              gameChannel={this.gameChannel}\n              opponentsName={this.state.opponentsName}\n              handleChooseStartSide={(side) => this.handleChooseStartSide(side)}\n              handleEndTurn={() => this.handleEndTurn()}>\n        </Game>\n      </div>\n    );\n    }\n  }\n\n  export default App;","export const PUBNUB_PUBLISH_KEY = \"pub-c-cbe88329-b9ae-47ef-8470-0a088c87c8ae\";\nexport const PUBNUB_SUBSCRIBE_KEY = \"sub-c-1caa123c-8678-11ea-885f-2621b2dc68c7\" ;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}