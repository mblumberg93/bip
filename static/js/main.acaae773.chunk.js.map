{"version":3,"sources":["components/Cup.js","components/Square.js","components/Rack.js","components/Table.js","components/Select.js","formations.js","components/SideInfo.js","components/Game.js","components/Lobby.js","App.js","secrets.js","serviceWorker.js","index.js"],"names":["Cup","props","this","handleClick","key","side","index","className","visible","active","onClick","Component","Square","state","handleCupClick","row","column","hasCup","Rack","event","squares","grid","map","position","i","Table","currentTurn","myPlayer","pubnub","publish","message","isMove","channel","gameChannel","isPlaying","Fragment","left_grid","right_grid","Select","e","handleChange","target","value","options","option","name","label","onChange","bind","STANDARD","cups","formation","FORMATIONS","SideInfo","formationOptions","setFormationOptions","handleStart","handleEndTurn","rerack","opponentsName","myTurn","handleFormationChange","Game","setGrid","getMessage","msg","updateGrid","resetGame","setState","handleChooseStartSide","sideToSet","filter","parseInt","size","Array","keys","forEach","_","r","c","squareHasCup","push","left_formation","right_formation","Lobby","newRoom","newName","handleCreateRoom","handleJoinRoom","handleResetTable","isRoomCreator","type","handleNewNameChange","handleNewRoomChange","roomId","App","PubNubReact","publishKey","subscribeKey","createDisabled","myName","lobbyChannel","init","unsubscribe","channels","startGame","subscribe","playerName","alert","sendCreatorName","startSide","newSide","endGame","creatorNameUpdate","length","result","characters","charactersLength","charAt","Math","floor","random","makeid","withPresence","room","hereNow","then","response","totalOccupancy","catch","error","console","log","newCurrentTurn","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acaae773.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Cup extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick() {\n        this.props.handleClick();\n    }\n\n    render() {\n        return (\n            <div key={\"square_\" + this.props.side + this.props.index}\n                 className={\"cup cup-\" + this.props.side + (this.props.visible ? \" cup-visible\" : \"\") + (this.props.active ? \"\" : \" cup-inactive\")}\n                 onClick={() => this.handleClick()}>\n            </div>\n        );\n    }\n}\n\nexport default Cup;","import React, { Component } from 'react';\nimport Cup from './Cup';\n\nclass Square extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { };\n    }\n\n    handleCupClick() {\n        this.props.handleCupClick({\n            side: this.props.side,\n            row: this.props.row,\n            column: this.props.column\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"square\">\n                { this.props.hasCup && \n                   <Cup key={\"cup_\" + this.props.side + this.props.index}\n                        side={this.props.side}\n                        index={this.props.index}\n                        active={this.props.active}\n                        visible={this.props.hasCup}\n                        handleClick={() => this.handleCupClick()}>\n                   </Cup> \n                }\n            </div>\n        );\n    }\n}\n\nexport default Square;","import React, { Component } from 'react';\nimport Square from './Square';\n\nclass Rack extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { };\n    }\n\n    handleCupClick(event) {\n        this.props.handleCupClick({\n            side: event.side,\n            row: event.row,\n            column: event.column\n        });\n    }\n\n    render() {\n        const squares = this.props.grid.map((position, i) => {\n            return (\n                <Square key={\"square_\" + this.props.side + i}\n                        index={i}\n                        side={this.props.side}\n                        row={position.row}\n                        column={position.column}\n                        hasCup={position.hasCup}\n                        active={position.active}\n                        handleCupClick={(event) => this.handleCupClick(event)}>\n                </Square>\n            );\n        })\n\n        return (\n            <div className={\"rack rack-\" + this.props.side}>\n                { squares }\n            </div>\n        );\n    }\n}\n\nexport default Rack;","import React, { Component } from 'react';\nimport Rack from './Rack'\n\nclass Table extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { };\n    }\n\n    handleCupClick(event) {\n        if (this.props.currentTurn !== this.props.myPlayer) {\n            return;\n        }\n        if (event.side === this.props.myPlayer){\n            return;\n        }\n        this.props.pubnub.publish({\n            message: {\n                isMove: true,\n                side: event.side,\n                row: event.row,\n                column: event.column\n            },\n            channel: this.props.gameChannel\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"table\">\n                { this.props.isPlaying &&\n                    <React.Fragment>\n                      <Rack key={\"left\"} \n                             side={\"left\"}\n                             grid={this.props.left_grid}\n                             handleCupClick={(event) => this.handleCupClick(event)}>\n                        </Rack>\n                        <Rack key={\"right\"} \n                              side={\"right\"}\n                              grid={this.props.right_grid}\n                              handleCupClick={(event) => this.handleCupClick(event)}>\n                        </Rack>\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Table;","import React, { Component } from 'react';\n\nclass Select extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleChange(e) {\n        this.props.handleChange(e.target.value);\n    }\n\n    render() {\n        const options = this.props.options.map((option) => {\n            return <option key={option.value} value={option.value}>{option.name}</option>\n        });\n        return (\n            <div className=\"custom-select\">\n                <label>\n                    { this.props.label }\n                    <select onChange={this.handleChange.bind(this)} value={this.props.value}>\n                        { options }\n                    </select>\n            </label>\n          </div>\n        );\n    }\n}\n\nexport default Select;","export const STANDARD = {\n    value: 0,\n    name: \"Standard\",\n    cups: 10,\n    formation: [\n        { row: 0, column: 0 },\n        { row: 2, column: 0 },\n        { row: 4, column: 0 },\n        { row: 6, column: 0 },\n        { row: 1, column: 2 },\n        { row: 3, column: 2 },\n        { row: 5, column: 2 },\n        { row: 2, column: 4 },\n        { row: 4, column: 4 },\n        { row: 3, column: 6 }\n    ]\n}\n\nexport const DESPERATION = {\n    value: 1,\n    name: \"Desperation Honeycomb\",\n    cups: 7,\n    formation: [\n        { row: 1, column: 2 },\n        { row: 2, column: 0 },\n        { row: 2, column: 4 },\n        { row: 3, column: 2 },\n        { row: 4, column: 0 },\n        { row: 4, column: 4 },\n        { row: 5, column: 2 }\n    ]\n}\n\nexport const THREETWOONE = {\n    value: 2,\n    name: \"Three Two One\",\n    cups: 6,\n    formation: [\n        { row: 1, column: 0 },\n        { row: 2, column: 2 },\n        { row: 3, column: 0 },\n        { row: 3, column: 4 },\n        { row: 4, column: 2 },\n        { row: 5, column: 0 }\n    ]\n}\n\nexport const THREETHREESTRAIGHT = {\n    value: 3,\n    name: \"3-3 Offset Straight Line\",\n    cups: 6,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 2, column: 4 },\n        { row: 4, column: 1 },\n        { row: 4, column: 3 },\n        { row: 4, column: 5 }\n    ]\n}\n\nexport const THREETWOSTRAIGHT = {\n    value: 4,\n    name: \"3-2 Offset Straight Line\",\n    cups: 5,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 2, column: 4 },\n        { row: 4, column: 1 },\n        { row: 4, column: 3 }\n    ]\n}\n\nexport const DIAMOND = {\n    value: 5,\n    name: \"Diamond\",\n    cups: 4,\n    formation: [\n        { row: 2, column: 2 },\n        { row: 3, column: 0 },\n        { row: 3, column: 4 },\n        { row: 4, column: 2 }\n    ]\n}\n\nexport const TWOTWOSTRAIGHT = {\n    value: 6,\n    name: \"2-2 Offset Straight Line\",\n    cups: 4,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 4, column: 1 },\n        { row: 4, column: 3 }\n    ]\n}\n\nexport const TINYTRIANGLE = {\n    value: 7,\n    name: \"Tiny Triangle\",\n    cups: 3,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 3, column: 2 },\n        { row: 4, column: 0 }\n    ]\n}\n\nexport const PLAYBUTTON = {\n    value: 8,\n    name: \"Play Button\",\n    cups: 3,\n    formation: [\n        { row: 2, column: 0 },\n        { row: 2, column: 2 },\n        { row: 4, column: 1 }\n    ]\n}\n\nexport const STOPLIGHT = {\n    value: 9,\n    name: \"Stoplight\",\n    cups: 3,\n    formation: [\n        { row: 3, column: 0 },\n        { row: 3, column: 2 },\n        { row: 3, column: 4 }\n    ]\n}\n\nexport const GENTLEMENS = {\n    value: 10,\n    name: \"Gentlemens\",\n    cups: 2,\n    formation: [\n        { row: 3, column: 0 },\n        { row: 3, column: 2 }\n    ]\n}\n\nexport const SINGLECUP = {\n    value: 11,\n    name: \"Single Cup\",\n    cups: 1,\n    formation: [\n        { row: 3, column: 0 }\n    ]\n}\n\nexport const FORMATIONS = [\n    STANDARD,\n    DESPERATION,\n    THREETWOONE,\n    THREETHREESTRAIGHT,\n    THREETWOSTRAIGHT,\n    DIAMOND,\n    TWOTWOSTRAIGHT,\n    TINYTRIANGLE,\n    PLAYBUTTON,\n    STOPLIGHT,\n    GENTLEMENS,\n    SINGLECUP\n];","import React, { Component } from 'react';\nimport Select from './Select';\nimport { FORMATIONS } from '../formations';\n\nclass SideInfo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            formationOptions: this.setFormationOptions()\n        }\n    }\n\n    setFormationOptions() {\n        const options = FORMATIONS.map((formation) => {\n            return {value: formation.value, name: formation.name}\n        });\n        return options;\n    }\n\n    handleStart() {\n        this.props.handleStart();\n    }\n\n    handleEndTurn() {\n        this.props.handleEndTurn(this.props.side);\n    }\n\n    handleFormationChange(value) {\n        this.props.pubnub.publish({\n            message: {\n                rerack: true,\n                side: this.props.side,\n                value: value\n            },\n            channel: this.props.gameChannel\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"side-info side-info-\" + this.props.side}>\n                { !this.props.currentTurn &&\n                    <button className={\"side-start-\" + this.props.side}\n                            onClick={() => this.handleStart()}>{this.props.side} start</button>\n                }\n                { (this.props.currentTurn === this.props.side) &&\n                    <div className={\"side-info-controls side-info-controls-\" + this.props.side}>\n                        <div className=\"side-info-controls-sub\">\n                            <h4 className={\"side-info-head side-info-head-\" + this.props.side}>\n                                {this.props.side === this.props.myPlayer ? \"your\" : (this.props.opponentsName + \"'s\") } turn</h4>\n                            { this.props.myTurn &&\n                                <button onClick={() => this.handleEndTurn()}>end turn</button>\n                            }\n                        </div>\n                        { this.props.myTurn &&\n                            <div className=\"side-info-controls-sub\">\n                                <Select key={\"select\" + this.props.side}\n                                        label=\"rerack\"\n                                        options={this.state.formationOptions}\n                                        handleChange={(value) => this.handleFormationChange(value)}></Select>\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SideInfo;","import React, { Component } from 'react';\nimport Table from './Table';\nimport SideInfo from './SideInfo';\nimport { STANDARD, FORMATIONS }from '../formations';\n\nclass Game extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            left_grid: this.setGrid('left', STANDARD.formation),\n            right_grid: this.setGrid('right', STANDARD.formation)\n        };\n    }\n\n    componentDidUpdate() {\n        if (this.props.gameChannel === null || this.props.pubnub === null) {\n            return;\n        }\n\n        this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n            if (msg.message.isMove) {\n                this.updateGrid(msg.message.side, msg.message.row, msg.message.column)\n            }\n            if (msg.message.rerack) {\n                this.rerack(msg.message.side, msg.message.value);\n            }\n            if (msg.message.resetGame) {\n                this.setState({\n                    left_grid: this.setGrid('left', STANDARD.formation),\n                    right_grid: this.setGrid('right', STANDARD.formation)\n                })\n            }\n        });\n    }\n\n    handleChooseStartSide(side) {\n        this.props.handleChooseStartSide(side);\n    }\n\n    handleEndTurn() {\n        this.props.handleEndTurn();\n    }\n\n    rerack(side, value) {\n        const sideToSet = side === \"left\" ? \"right\" : \"left\"\n        const formation = FORMATIONS.filter(formation => formation.value === parseInt(value))[0].formation;\n        const grid = this.setGrid(sideToSet, formation);\n        if (sideToSet === \"left\") {\n            this.setState({ left_grid: grid });\n        } else {\n            this.setState({ right_grid: grid });\n        }\n    }\n\n    squareHasCup(formation, row, column) {\n        for (const position of formation) {\n            if (position.row === row && position.column === column) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    setGrid(side, formation) {\n        const size = [...Array(7).keys()];\n        const grid = [];\n        size.forEach((_, row) => {\n            size.forEach((_, column) => {\n                const r = side === 'left' ? row : 6 - row;\n                const c = side === 'left' ? column : 6 - column;\n                const hasCup = this.squareHasCup(formation, r, c);\n                grid.push({\n                    row: r, \n                    column: c, \n                    hasCup: hasCup,\n                    active: hasCup\n                });\n            });\n        });\n        return grid;\n    }\n\n    updateGrid(side, row, column) {\n        const grid = side === \"left\" ? this.state.left_grid : this.state.right_grid;\n        grid.forEach((position) => {\n            if (position.row === row && position.column === column) {\n                position.active = !position.active;\n            }\n        });\n        if (side === \"left\") {\n            this.setState({ left_grid: grid });\n        } else {\n            this.setState({ right_grid: grid });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"game\">\n                { this.props.isPlaying &&\n                    <React.Fragment>\n                        <SideInfo key=\"sideinfoleft\"\n                                  side=\"left\"\n                                  currentTurn={this.props.currentTurn}\n                                  myTurn={this.props.myTurn}\n                                  myPlayer={this.props.myPlayer}\n                                  pubnub={this.props.pubnub}\n                                  gameChannel={this.props.gameChannel}\n                                  opponentsName={this.props.opponentsName}\n                                  handleStart={() => this.handleChooseStartSide(\"left\")}\n                                  handleEndTurn={() => this.handleEndTurn()}>\n                        </SideInfo>\n                        <SideInfo key=\"sideinforight\"\n                                  side=\"right\"\n                                  currentTurn={this.props.currentTurn}\n                                  myTurn={this.props.myTurn}\n                                  myPlayer={this.props.myPlayer}\n                                  pubnub={this.props.pubnub}\n                                  gameChannel={this.props.gameChannel}\n                                  opponentsName={this.props.opponentsName}\n                                  handleStart={() => this.handleChooseStartSide(\"right\")}\n                                  handleEndTurn={() => this.handleEndTurn()}>\n                        </SideInfo>\n                    </React.Fragment>\n                }\n                <Table left_formation={this.state.left_formation}\n                       right_formation={this.state.right_formation}\n                       left_grid={this.state.left_grid}\n                       right_grid={this.state.right_grid}\n                       isPlaying={this.props.isPlaying}\n                       pubnub={this.props.pubnub}\n                       gameChannel={this.props.gameChannel}\n                       currentTurn={this.props.currentTurn}\n                       myPlayer={this.props.myPlayer}>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React, { Component } from 'react';\n\nclass Lobby extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newRoom: '',\n            newName: ''\n        }\n    }\n\n    handleCreateRoom() {\n        this.props.handleCreateRoom(this.state.newName);\n    }\n\n    handleJoinRoom() {\n        this.props.handleJoinRoom(this.state.newRoom, this.state.newName);\n    }\n\n    handleResetTable() {\n        this.props.handleResetTable();\n    }\n    \n    handleNewRoomChange(e) {\n        this.setState({ newRoom: e.target.value });\n    }\n\n    handleNewNameChange(e) {\n        this.setState({ newName: e.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"lobby\">\n                <h3>BIP - BEER[INTERNET]PONG</h3>\n                <div>\n                    { !this.props.isPlaying && !this.props.isRoomCreator &&  \n                        <React.Fragment>\n                            <div className=\"lobby-section\">\n                                <h4>Step 1:</h4>\n                            </div>\n                            <div className=\"lobby-section\">\n                                <label>\n                                    Enter Team Name:\n                                    <input type=\"text\" onChange={(e) => this.handleNewNameChange(e)}></input>\n                                </label>\n                            </div>\n                            <div className=\"lobby-section\">\n                                <h4>Step 2:</h4>\n                            </div>\n                            <div className=\"lobby-section lobby-section-create\">\n                                <button onClick={() => this.handleCreateRoom()}>Create Game</button>\n                            </div>\n                            <div className=\"lobby-section\">\n                            <   h4>Or</h4>\n                            </div>\n                            <div className=\"lobby-section lobby-section-join\">\n                                <label>\n                                    Enter Game Code:\n                                    <input type=\"text\" onChange={(e) => this.handleNewRoomChange(e)}></input>\n                                </label>\n                                <button onClick={() => this.handleJoinRoom()}>Join Game</button>\n                            </div>\n                        </React.Fragment>\n                    }\n                    { this.props.isPlaying && \n                    <div className=\"lobby-section lobby-section-end\">\n                        <button onClick={() => this.handleResetTable()}>Reset Table</button>\n                    </div>\n                    }\n                    { this.props.isRoomCreator && !this.props.isPlaying && \n                        <div className=\"lobby-section lobby-section-room\">\n                            <b>Share This Game Code With Your Opponent: {this.props.roomId}</b>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Lobby;","import React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\nimport Game from './components/Game';\nimport Lobby from './components/Lobby';\nimport './App.css';\nimport { PUBNUB_PUBLISH_KEY, PUBNUB_SUBSCRIBE_KEY } from './secrets';\n\nclass App extends Component {\n  constructor(props) {  \n    super(props);\n\n    this.pubnub = new PubNubReact({\n      publishKey: PUBNUB_PUBLISH_KEY, \n      subscribeKey: PUBNUB_SUBSCRIBE_KEY  \n    });\n    \n    this.state = {\n      currentTurn: null, // left or right\n      myPlayer: null, // left or right\n      myTurn: false,\n      isPlaying: false, // Set to true when 2 players are in a channel\n      isRoomCreator: false,\n      createDisabled: false, // whether the create button is disabled\n      myName: \"\",\n      opponentsName: \"\"\n    };\n\n    this.lobbyChannel = null; // Lobby channel\n    this.gameChannel = null; // Game channel\n    this.roomId = null; // Unique id when player creates a room\n    this.pubnub.init(this);\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if (msg.message.startGame) {\n          // Create a different channel for the game\n          this.gameChannel = 'bipgame--' + this.roomId;\n\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n\n          if (this.state.isRoomCreator) {\n            this.setState({opponentsName: msg.message.playerName});\n            alert(\"You opponent is \" + msg.message.playerName);\n            this.sendCreatorName();\n          } else {\n            this.setState({myName: msg.message.playerName});\n            this.setState({myPlayer: 'right'})\n          }\n\n          this.setState({\n            isPlaying: true,\n            createDisabled: true\n          });\n        }\n        if (msg.message.startSide) {\n          this.setState({ \n            currentTurn: msg.message.startSide,\n            myTurn: this.state.myPlayer === msg.message.startSide\n          });\n        }\n        if (msg.message.newSide) {\n          this.setState({ \n            currentTurn: msg.message.newSide,\n            myTurn: this.state.myPlayer === msg.message.newSide\n          });\n        }\n        if (msg.message.endGame && msg.message.side !== this.state.myPlayer) {\n          alert(\"The Game Has Ended\");\n        }\n        if (msg.message.creatorNameUpdate && !this.state.isRoomCreator) {\n          this.setState({opponentsName: msg.message.playerName });\n          alert(\"You opponent is \" + msg.message.playerName);\n        }\n      }); \n    }\n  }\n\n  sendCreatorName() {\n    this.pubnub.publish({\n      message: {\n        creatorNameUpdate: true,\n        playerName: this.state.myName\n      },\n      channel: this.lobbyChannel\n    });\n  }\n\n  makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n\n  handleCreateRoom(name) {\n    // Create a random name for the channel\n    this.roomId = this.makeid(5);\n    this.lobbyChannel = 'biplobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n    this.setState({\n      myPlayer: 'left',\n      isRoomCreator: true,\n      createDisabled: true, // Disable the 'Create' button\n      myTurn: false, // Room creator makes the 1st move\n      myName: name\n    });\n  }\n\n  handleJoinRoom(room, name) {\n    this.roomId = room;\n    this.lobbyChannel = 'biplobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n    }).then((response) => { \n        if(response.totalOccupancy < 2){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            myPlayer: 'right',\n          });\n          \n          this.pubnub.publish({\n            message: {\n              startGame: true,\n              playerName: name\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          alert(\"Game in progress. Try another room.\");\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  handleResetTable() {\n    this.pubnub.publish({\n      message: {\n        resetGame: true\n      },\n      channel: this.gameChannel\n    });\n  }\n\n  handleChooseStartSide(side) {\n    this.setState({ \n      currentTurn: side,\n      myTurn: this.state.myPlayer === side\n    });\n    this.pubnub.publish({\n      message: {\n        startSide: side\n      },\n      channel: this.lobbyChannel\n    });\n  }\n\n  handleEndTurn() {\n    const newCurrentTurn = this.state.currentTurn === 'left' ? 'right' : 'left'\n    this.pubnub.publish({\n      message: {\n        newSide: newCurrentTurn\n      },\n      channel: this.lobbyChannel\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"help\"><a href=\"https://github.com/mblumberg93/bip\" target=\"_blank\">click here for instructions on how to play</a></div>\n        { this.state.isPlaying &&\n          <div className={\"you-are you-are-\" + this.state.myPlayer}>\n            <h2>Welcome {this.state.myName}! Your side is <span className=\"you-are-side\">{this.state.myPlayer}</span></h2>\n          </div>\n        }\n        <Lobby roomId={this.roomId}\n               isPlaying={this.state.isPlaying}\n               isRoomCreator={this.state.isRoomCreator}\n               handleCreateRoom={(name) => this.handleCreateRoom(name)}\n               handleJoinRoom={(room, name) => this.handleJoinRoom(room, name)}\n               handleResetTable={() => this.handleResetTable()}>\n        </Lobby>\n        <Game currentTurn={this.state.currentTurn}\n              myPlayer={this.state.myPlayer}\n              myTurn={this.state.myTurn}\n              isPlaying={this.state.isPlaying}\n              pubnub={this.pubnub}\n              gameChannel={this.gameChannel}\n              opponentsName={this.state.opponentsName}\n              handleChooseStartSide={(side) => this.handleChooseStartSide(side)}\n              handleEndTurn={() => this.handleEndTurn()}>\n        </Game>\n      </div>\n    );\n    }\n  }\n\n  export default App;","export const PUBNUB_PUBLISH_KEY = \"pub-c-cbe88329-b9ae-47ef-8470-0a088c87c8ae\";\nexport const PUBNUB_SUBSCRIBE_KEY = \"sub-c-1caa123c-8678-11ea-885f-2621b2dc68c7\" ;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}